{"ast":null,"code":"var _jsxFileName = \"/Users/trevorsykes/Desktop/react-portfolio/src/Globe.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport globeTexture from '../src/your-globe-texture.webp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Globe = () => {\n  _s();\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(70, 1, 0.1, 10); // Adjust near and far planes accordingly\n  const renderer = new THREE.WebGLRenderer({\n    antialias: true\n  });\n  const globeRef = useRef(null);\n  useEffect(() => {\n    const width = 100; // Width of the container\n    const height = window.innerHeight; // Full height of the viewport\n\n    renderer.setSize(width, height);\n    globeRef.current.appendChild(renderer.domElement);\n\n    // Create a sphere geometry for the globe with higher segments\n    const geometry = new THREE.SphereGeometry(0.5, 100, 100); // Decreased sphere size to fit container\n    const textureLoader = new THREE.TextureLoader();\n    const texture = textureLoader.load(globeTexture);\n    const material = new THREE.MeshStandardMaterial({\n      map: texture\n    });\n    const globeMesh = new THREE.Mesh(geometry, material);\n\n    // Position the globe appropriately within the container\n    globeMesh.position.set(0, 0, 0); // Adjust position as needed\n\n    scene.add(globeMesh);\n\n    // Set camera position and aspect ratio\n    camera.position.z = 2;\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n    const animate = () => {\n      requestAnimationFrame(animate);\n      globeMesh.rotation.y += 0.005;\n      renderer.render(scene, camera);\n    };\n    animate();\n    return () => {\n      globeRef.current.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, [renderer, scene, camera]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"globe\",\n    ref: globeRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n_s(Globe, \"RnDsAY9k2/HDGJbJqxvzVF3XlM4=\");\n_c = Globe;\nexport default Globe;\nvar _c;\n$RefreshReg$(_c, \"Globe\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","globeTexture","jsxDEV","_jsxDEV","Globe","_s","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","globeRef","width","height","window","innerHeight","setSize","current","appendChild","domElement","geometry","SphereGeometry","textureLoader","TextureLoader","texture","load","material","MeshStandardMaterial","map","globeMesh","Mesh","position","set","add","z","aspect","updateProjectionMatrix","animate","requestAnimationFrame","rotation","y","render","removeChild","dispose","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/trevorsykes/Desktop/react-portfolio/src/Globe.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport globeTexture from '../src/your-globe-texture.webp';\n\nconst Globe = () => {\n  const scene = new THREE.Scene();\n  const camera = new THREE.PerspectiveCamera(70, 1, 0.1, 10); // Adjust near and far planes accordingly\n  const renderer = new THREE.WebGLRenderer({ antialias: true });\n  const globeRef = useRef(null);\n\n  useEffect(() => {\n    const width = 100; // Width of the container\n    const height = window.innerHeight; // Full height of the viewport\n\n    renderer.setSize(width, height);\n    globeRef.current.appendChild(renderer.domElement);\n\n    // Create a sphere geometry for the globe with higher segments\n    const geometry = new THREE.SphereGeometry(0.5, 100, 100); // Decreased sphere size to fit container\n    const textureLoader = new THREE.TextureLoader();\n    const texture = textureLoader.load(globeTexture);\n\n    const material = new THREE.MeshStandardMaterial({ map: texture });\n    const globeMesh = new THREE.Mesh(geometry, material);\n\n    // Position the globe appropriately within the container\n    globeMesh.position.set(0, 0, 0); // Adjust position as needed\n\n    scene.add(globeMesh);\n\n    // Set camera position and aspect ratio\n    camera.position.z = 2;\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      globeMesh.rotation.y += 0.005;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    return () => {\n      globeRef.current.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, [renderer, scene, camera]);\n\n  return <div className='globe' ref={globeRef} />;\n};\n\nexport default Globe;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,YAAY,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,KAAK,GAAG,IAAIN,KAAK,CAACO,KAAK,CAAC,CAAC;EAC/B,MAAMC,MAAM,GAAG,IAAIR,KAAK,CAACS,iBAAiB,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAMC,QAAQ,GAAG,IAAIV,KAAK,CAACW,aAAa,CAAC;IAAEC,SAAS,EAAE;EAAK,CAAC,CAAC;EAC7D,MAAMC,QAAQ,GAAGf,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAG,GAAG,CAAC,CAAC;IACnB,MAAMC,MAAM,GAAGC,MAAM,CAACC,WAAW,CAAC,CAAC;;IAEnCP,QAAQ,CAACQ,OAAO,CAACJ,KAAK,EAAEC,MAAM,CAAC;IAC/BF,QAAQ,CAACM,OAAO,CAACC,WAAW,CAACV,QAAQ,CAACW,UAAU,CAAC;;IAEjD;IACA,MAAMC,QAAQ,GAAG,IAAItB,KAAK,CAACuB,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAC1D,MAAMC,aAAa,GAAG,IAAIxB,KAAK,CAACyB,aAAa,CAAC,CAAC;IAC/C,MAAMC,OAAO,GAAGF,aAAa,CAACG,IAAI,CAAC1B,YAAY,CAAC;IAEhD,MAAM2B,QAAQ,GAAG,IAAI5B,KAAK,CAAC6B,oBAAoB,CAAC;MAAEC,GAAG,EAAEJ;IAAQ,CAAC,CAAC;IACjE,MAAMK,SAAS,GAAG,IAAI/B,KAAK,CAACgC,IAAI,CAACV,QAAQ,EAAEM,QAAQ,CAAC;;IAEpD;IACAG,SAAS,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAEjC5B,KAAK,CAAC6B,GAAG,CAACJ,SAAS,CAAC;;IAEpB;IACAvB,MAAM,CAACyB,QAAQ,CAACG,CAAC,GAAG,CAAC;IACrB5B,MAAM,CAAC6B,MAAM,GAAGvB,KAAK,GAAGC,MAAM;IAC9BP,MAAM,CAAC8B,sBAAsB,CAAC,CAAC;IAE/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BR,SAAS,CAACU,QAAQ,CAACC,CAAC,IAAI,KAAK;MAC7BhC,QAAQ,CAACiC,MAAM,CAACrC,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAED+B,OAAO,CAAC,CAAC;IAET,OAAO,MAAM;MACX1B,QAAQ,CAACM,OAAO,CAACyB,WAAW,CAAClC,QAAQ,CAACW,UAAU,CAAC;MACjDX,QAAQ,CAACmC,OAAO,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,CAACnC,QAAQ,EAAEJ,KAAK,EAAEE,MAAM,CAAC,CAAC;EAE7B,oBAAOL,OAAA;IAAK2C,SAAS,EAAC,OAAO;IAACC,GAAG,EAAElC;EAAS;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjD,CAAC;AAAC9C,EAAA,CA9CID,KAAK;AAAAgD,EAAA,GAALhD,KAAK;AAgDX,eAAeA,KAAK;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}