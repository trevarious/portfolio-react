{"ast":null,"code":"var _jsxFileName = \"/Users/trevorsykes/Desktop/tic-tac-toe/src/FloatingParticles.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Particle = () => {\n  _s();\n  const meshRef = useRef();\n  useFrame(() => {\n    if (meshRef.current) {\n      const mesh = meshRef.current;\n      mesh.rotation.x += 0.1;\n      mesh.rotation.y += 0.1;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: meshRef,\n    children: [/*#__PURE__*/_jsxDEV(\"octahedronGeometry\", {\n      args: [0.1, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: new THREE.Color(`hsl(${Math.random() * 360}, 100%, 50%)`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Particle, \"/vg1AmA8+P3+Fj0/y210JTVKtL0=\", false, function () {\n  return [useFrame];\n});\n_c = Particle;\nconst FloatingParticles = () => {\n  const particles = Array.from({\n    length: 200\n  }, (_, index) => /*#__PURE__*/_jsxDEV(Particle, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 63\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      zIndex: -1\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), particles]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c2 = FloatingParticles;\nexport default FloatingParticles;\nvar _c, _c2;\n$RefreshReg$(_c, \"Particle\");\n$RefreshReg$(_c2, \"FloatingParticles\");","map":{"version":3,"names":["React","useRef","Canvas","useFrame","THREE","jsxDEV","_jsxDEV","Particle","_s","meshRef","current","mesh","rotation","x","y","ref","children","args","fileName","_jsxFileName","lineNumber","columnNumber","color","Color","Math","random","_c","FloatingParticles","particles","Array","from","length","_","index","style","position","top","left","zIndex","intensity","_c2","$RefreshReg$"],"sources":["/Users/trevorsykes/Desktop/tic-tac-toe/src/FloatingParticles.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport * as THREE from 'three';\n\nconst Particle = () => {\n  const meshRef = useRef();\n\n  useFrame(() => {\n    if (meshRef.current) {\n      const mesh = meshRef.current;\n      mesh.rotation.x += 0.1;\n      mesh.rotation.y += 0.1;\n    }\n  });\n\n  return (\n    <mesh ref={meshRef}>\n      <octahedronGeometry args={[0.1, 0]} />\n      <meshStandardMaterial color={new THREE.Color(`hsl(${Math.random() * 360}, 100%, 50%)`)} />\n    </mesh>\n  );\n};\n\nconst FloatingParticles = () => {\n  const particles = Array.from({ length: 200 }, (_, index) => <Particle key={index} />);\n\n  return (\n    <Canvas style={{ position: 'fixed', top: 0, left: 0, zIndex: -1 }}>\n      <ambientLight intensity={0.5} />\n      <pointLight position={[10, 10, 10]} />\n      {particles}\n    </Canvas>\n  );\n};\n\nexport default FloatingParticles;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,mBAAmB;AACpD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,OAAO,GAAGR,MAAM,CAAC,CAAC;EAExBE,QAAQ,CAAC,MAAM;IACb,IAAIM,OAAO,CAACC,OAAO,EAAE;MACnB,MAAMC,IAAI,GAAGF,OAAO,CAACC,OAAO;MAC5BC,IAAI,CAACC,QAAQ,CAACC,CAAC,IAAI,GAAG;MACtBF,IAAI,CAACC,QAAQ,CAACE,CAAC,IAAI,GAAG;IACxB;EACF,CAAC,CAAC;EAEF,oBACER,OAAA;IAAMS,GAAG,EAAEN,OAAQ;IAAAO,QAAA,gBACjBV,OAAA;MAAoBW,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCf,OAAA;MAAsBgB,KAAK,EAAE,IAAIlB,KAAK,CAACmB,KAAK,CAAE,OAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAI,cAAa;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEX,CAAC;AAACb,EAAA,CAjBID,QAAQ;EAAA,QAGZJ,QAAQ;AAAA;AAAAuB,EAAA,GAHJnB,QAAQ;AAmBd,MAAMoB,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAI,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,kBAAK3B,OAAA,CAACC,QAAQ,MAAM0B,KAAK;IAAAf,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,CAAC;EAErF,oBACEf,OAAA,CAACJ,MAAM;IAACgC,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAE,CAAE;IAAAtB,QAAA,gBAChEV,OAAA;MAAciC,SAAS,EAAE;IAAI;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCf,OAAA;MAAY6B,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;IAAE;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrCO,SAAS;EAAA;IAAAV,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEb,CAAC;AAACmB,GAAA,GAVIb,iBAAiB;AAYvB,eAAeA,iBAAiB;AAAC,IAAAD,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}